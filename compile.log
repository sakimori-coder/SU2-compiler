make: Warning: File 'Makefile' has modification time 4.5 s in the future
In file included from /home/morisaki/.local/eigen3/Eigen/Core:164,
                 from src/type.hpp:3,
                 from src/SU2_compiler.hpp:4,
                 from src/SU2_compiler.cpp:1:
/home/morisaki/.local/eigen3/Eigen/src/Core/../plugins/BlockMethods.h: In instantiation of ‘typename Eigen::DenseBase<Derived>::FixedSegmentReturnType<Eigen::internal::get_fixed_value<NRowsType>::value>::Type Eigen::DenseBase<Derived>::tail(NType) [with NType = int; Derived = Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, 1, true>; typename Eigen::DenseBase<Derived>::FixedSegmentReturnType<Eigen::internal::get_fixed_value<NRowsType>::value>::Type = Eigen::VectorBlock<Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, 1, true>, -1>]’:
src/SU2_compiler.cpp:641:56:   recursively required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 7; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 7, 1, 0, 7, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:641:56:   required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 8; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 8, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:764:53:   required from here
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:143:29: error: static assertion failed: YOU_TRIED_CALLING_A_VECTOR_METHOD_ON_A_MATRIX
  143 |   EIGEN_STATIC_ASSERT(TYPE::IsVectorAtCompileTime, \
      |                             ^~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/../plugins/BlockMethods.h:1259:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT_VECTOR_ONLY’
 1259 |   EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:143:29: note: ‘Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, 1, true>::IsVectorAtCompileTime’ evaluates to false
  143 |   EIGEN_STATIC_ASSERT(TYPE::IsVectorAtCompileTime, \
      |                             ^~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/../plugins/BlockMethods.h:1259:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT_VECTOR_ONLY’
 1259 |   EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/morisaki/.local/eigen3/Eigen/Core:287,
                 from src/type.hpp:3,
                 from src/SU2_compiler.hpp:4,
                 from src/SU2_compiler.cpp:1:
/home/morisaki/.local/eigen3/Eigen/src/Core/DenseStorage.h: In instantiation of ‘struct Eigen::internal::plain_array<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, -2, 0, 16>’:
/home/morisaki/.local/eigen3/Eigen/src/Core/DenseStorage.h:209:44:   required from ‘class Eigen::DenseStorage<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, -2, -2, 1, 0>’
/home/morisaki/.local/eigen3/Eigen/src/Core/PlainObjectBase.h:131:113:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, -2, 1, 0, -2, 1> >’
/home/morisaki/.local/eigen3/Eigen/src/Core/Matrix.h:178:7:   required from ‘class Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, -2, 1, 0, -2, 1>’
src/SU2_compiler.cpp:641:56:   recursively required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 7; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 7, 1, 0, 7, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:641:56:   required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 8; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 8, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:764:53:   required from here
/home/morisaki/.local/eigen3/Eigen/src/Core/DenseStorage.h:104:33: error: size ‘18446744073709551614’ of array exceeds maximum object size ‘9223372036854775807’
  104 |   EIGEN_ALIGN_TO_BOUNDARY(16) T array[Size];
      |                                 ^~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/DenseStorage.h: In instantiation of ‘struct Eigen::internal::plain_array<long long int, -2, 0, 16>’:
/home/morisaki/.local/eigen3/Eigen/src/Core/DenseStorage.h:209:44:   required from ‘class Eigen::DenseStorage<long long int, -2, -2, 1, 0>’
/home/morisaki/.local/eigen3/Eigen/src/Core/PlainObjectBase.h:131:113:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<long long int, -2, 1, 0, -2, 1> >’
/home/morisaki/.local/eigen3/Eigen/src/Core/Matrix.h:178:7:   required from ‘class Eigen::Matrix<long long int, -2, 1, 0, -2, 1>’
src/SU2_compiler.cpp:641:56:   recursively required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 7; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 7, 1, 0, 7, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:641:56:   required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 8; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 8, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:764:53:   required from here
/home/morisaki/.local/eigen3/Eigen/src/Core/DenseStorage.h:104:33: error: size ‘18446744073709551614’ of array exceeds maximum object size ‘9223372036854775807’
In file included from /home/morisaki/.local/eigen3/Eigen/Core:164,
                 from src/type.hpp:3,
                 from src/SU2_compiler.hpp:4,
                 from src/SU2_compiler.cpp:1:
/home/morisaki/.local/eigen3/Eigen/src/Core/Dot.h: In instantiation of ‘typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, 1, true>; Derived = Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, 1, true>; typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >; typename Eigen::internal::traits<OtherDerived>::Scalar = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >; typename Eigen::internal::traits<T>::Scalar = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’:
src/Unimodular_Z.hpp:120:65:   required from ‘SU2_Compiler::UnimodularMatrix<N> SU2_Compiler::LLL(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, M, N>, SU2_Compiler::FTYPE) [with int M = 0; int N = 0; SU2_Compiler::UnimodularMatrix<N> = Eigen::Matrix<long long int, 0, 0, 0, 0, 0>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:641:56:   recursively required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 7; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 7, 1, 0, 7, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:641:56:   required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 8; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 8, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:764:53:   required from here
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:143:29: error: static assertion failed: YOU_TRIED_CALLING_A_VECTOR_METHOD_ON_A_MATRIX
  143 |   EIGEN_STATIC_ASSERT(TYPE::IsVectorAtCompileTime, \
      |                             ^~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/Dot.h:74:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT_VECTOR_ONLY’
   74 |   EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:143:29: note: ‘Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, 1, true>::IsVectorAtCompileTime’ evaluates to false
  143 |   EIGEN_STATIC_ASSERT(TYPE::IsVectorAtCompileTime, \
      |                             ^~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/Dot.h:74:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT_VECTOR_ONLY’
   74 |   EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:143:29: error: static assertion failed: YOU_TRIED_CALLING_A_VECTOR_METHOD_ON_A_MATRIX
  143 |   EIGEN_STATIC_ASSERT(TYPE::IsVectorAtCompileTime, \
      |                             ^~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/Dot.h:75:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT_VECTOR_ONLY’
   75 |   EIGEN_STATIC_ASSERT_VECTOR_ONLY(OtherDerived)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:143:29: note: ‘Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, 1, true>::IsVectorAtCompileTime’ evaluates to false
  143 |   EIGEN_STATIC_ASSERT(TYPE::IsVectorAtCompileTime, \
      |                             ^~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/Dot.h:75:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT_VECTOR_ONLY’
   75 |   EIGEN_STATIC_ASSERT_VECTOR_ONLY(OtherDerived)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/../plugins/BlockMethods.h: In instantiation of ‘typename Eigen::DenseBase<Derived>::FixedSegmentReturnType<Eigen::internal::get_fixed_value<NRowsType>::value>::Type Eigen::DenseBase<Derived>::tail(NType) [with NType = long int; Derived = Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, 1, true>; typename Eigen::DenseBase<Derived>::FixedSegmentReturnType<Eigen::internal::get_fixed_value<NRowsType>::value>::Type = Eigen::VectorBlock<Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, 1, true>, -1>]’:
/home/morisaki/.local/eigen3/Eigen/src/Cholesky/LLT.h:448:43:   required from ‘Eigen::LLT<_MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>; _MatrixType = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>; int _UpLo = 1]’
/home/morisaki/.local/eigen3/Eigen/src/Cholesky/LLT.h:124:14:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>; _MatrixType = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>; int _UpLo = 1]’
src/SU2_compiler.cpp:641:56:   recursively required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 7; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 7, 1, 0, 7, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:641:56:   required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 8; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 8, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:764:53:   required from here
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:143:29: error: static assertion failed: YOU_TRIED_CALLING_A_VECTOR_METHOD_ON_A_MATRIX
  143 |   EIGEN_STATIC_ASSERT(TYPE::IsVectorAtCompileTime, \
      |                             ^~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/../plugins/BlockMethods.h:1259:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT_VECTOR_ONLY’
 1259 |   EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:143:29: note: ‘Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, 1, true>::IsVectorAtCompileTime’ evaluates to false
  143 |   EIGEN_STATIC_ASSERT(TYPE::IsVectorAtCompileTime, \
      |                             ^~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/../plugins/BlockMethods.h:1259:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT_VECTOR_ONLY’
 1259 |   EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/../plugins/BlockMethods.h: In instantiation of ‘typename Eigen::DenseBase<Derived>::FixedSegmentReturnType<Eigen::internal::get_fixed_value<NRowsType>::value>::Type Eigen::DenseBase<Derived>::head(NType) [with NType = long int; Derived = Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 1, 0, false>; typename Eigen::DenseBase<Derived>::FixedSegmentReturnType<Eigen::internal::get_fixed_value<NRowsType>::value>::Type = Eigen::VectorBlock<Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 1, 0, false>, -1>]’:
/home/morisaki/.local/eigen3/Eigen/src/Cholesky/LLT.h:448:101:   required from ‘Eigen::LLT<_MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>; _MatrixType = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>; int _UpLo = 1]’
/home/morisaki/.local/eigen3/Eigen/src/Cholesky/LLT.h:124:14:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>; _MatrixType = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>; int _UpLo = 1]’
src/SU2_compiler.cpp:641:56:   recursively required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 7; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 7, 1, 0, 7, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:641:56:   required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 8; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 8, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:764:53:   required from here
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:143:29: error: static assertion failed: YOU_TRIED_CALLING_A_VECTOR_METHOD_ON_A_MATRIX
  143 |   EIGEN_STATIC_ASSERT(TYPE::IsVectorAtCompileTime, \
      |                             ^~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/../plugins/BlockMethods.h:1210:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT_VECTOR_ONLY’
 1210 |   EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:143:29: note: ‘Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 1, 0, false>::IsVectorAtCompileTime’ evaluates to false
  143 |   EIGEN_STATIC_ASSERT(TYPE::IsVectorAtCompileTime, \
      |                             ^~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/../plugins/BlockMethods.h:1210:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT_VECTOR_ONLY’
 1210 |   EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/../plugins/BlockMethods.h: In instantiation of ‘typename Eigen::DenseBase<Derived>::FixedSegmentReturnType<Eigen::internal::get_fixed_value<NRowsType>::value>::Type Eigen::DenseBase<Derived>::head(NType) [with NType = long int; Derived = Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, 1, true>; typename Eigen::DenseBase<Derived>::FixedSegmentReturnType<Eigen::internal::get_fixed_value<NRowsType>::value>::Type = Eigen::VectorBlock<Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, 1, true>, -1>]’:
/home/morisaki/.local/eigen3/Eigen/src/Cholesky/LLT.h:450:43:   required from ‘Eigen::LLT<_MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>; _MatrixType = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>; int _UpLo = 1]’
/home/morisaki/.local/eigen3/Eigen/src/Cholesky/LLT.h:124:14:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>; _MatrixType = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>; int _UpLo = 1]’
src/SU2_compiler.cpp:641:56:   recursively required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 7; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 7, 1, 0, 7, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:641:56:   required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 8; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 8, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:764:53:   required from here
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:143:29: error: static assertion failed: YOU_TRIED_CALLING_A_VECTOR_METHOD_ON_A_MATRIX
  143 |   EIGEN_STATIC_ASSERT(TYPE::IsVectorAtCompileTime, \
      |                             ^~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/../plugins/BlockMethods.h:1210:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT_VECTOR_ONLY’
 1210 |   EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:143:29: note: ‘Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, 1, true>::IsVectorAtCompileTime’ evaluates to false
  143 |   EIGEN_STATIC_ASSERT(TYPE::IsVectorAtCompileTime, \
      |                             ^~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/../plugins/BlockMethods.h:1210:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT_VECTOR_ONLY’
 1210 |   EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/../plugins/BlockMethods.h: In instantiation of ‘typename Eigen::DenseBase<Derived>::FixedSegmentReturnType<Eigen::internal::get_fixed_value<NRowsType>::value>::Type Eigen::DenseBase<Derived>::tail(NType) [with NType = long int; Derived = Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 1, 0, false>; typename Eigen::DenseBase<Derived>::FixedSegmentReturnType<Eigen::internal::get_fixed_value<NRowsType>::value>::Type = Eigen::VectorBlock<Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 1, 0, false>, -1>]’:
/home/morisaki/.local/eigen3/Eigen/src/Cholesky/LLT.h:450:94:   required from ‘Eigen::LLT<_MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>; _MatrixType = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>; int _UpLo = 1]’
/home/morisaki/.local/eigen3/Eigen/src/Cholesky/LLT.h:124:14:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>; _MatrixType = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>; int _UpLo = 1]’
src/SU2_compiler.cpp:641:56:   recursively required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 7; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 7, 1, 0, 7, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:641:56:   required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 8; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 8, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:764:53:   required from here
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:143:29: error: static assertion failed: YOU_TRIED_CALLING_A_VECTOR_METHOD_ON_A_MATRIX
  143 |   EIGEN_STATIC_ASSERT(TYPE::IsVectorAtCompileTime, \
      |                             ^~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/../plugins/BlockMethods.h:1259:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT_VECTOR_ONLY’
 1259 |   EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:143:29: note: ‘Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 1, 0, false>::IsVectorAtCompileTime’ evaluates to false
  143 |   EIGEN_STATIC_ASSERT(TYPE::IsVectorAtCompileTime, \
      |                             ^~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/../plugins/BlockMethods.h:1259:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT_VECTOR_ONLY’
 1259 |   EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/Dot.h: In instantiation of ‘typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, 1, true>; Derived = Eigen::Block<const Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, 1, true>; typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >; typename Eigen::internal::traits<OtherDerived>::Scalar = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >; typename Eigen::internal::traits<T>::Scalar = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’:
src/Unimodular_Z.hpp:95:54:   required from ‘Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, M, N> SU2_Compiler::GSO(const Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, M, N>&) [with int M = 0; int N = 0]’
src/Unimodular_Z.hpp:119:23:   required from ‘SU2_Compiler::UnimodularMatrix<N> SU2_Compiler::LLL(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, M, N>, SU2_Compiler::FTYPE) [with int M = 0; int N = 0; SU2_Compiler::UnimodularMatrix<N> = Eigen::Matrix<long long int, 0, 0, 0, 0, 0>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:641:56:   recursively required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 7; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 7, 1, 0, 7, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:641:56:   required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 8; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 8, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:764:53:   required from here
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:143:29: error: static assertion failed: YOU_TRIED_CALLING_A_VECTOR_METHOD_ON_A_MATRIX
  143 |   EIGEN_STATIC_ASSERT(TYPE::IsVectorAtCompileTime, \
      |                             ^~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/Dot.h:74:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT_VECTOR_ONLY’
   74 |   EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:143:29: note: ‘Eigen::Block<const Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, 1, true>::IsVectorAtCompileTime’ evaluates to false
  143 |   EIGEN_STATIC_ASSERT(TYPE::IsVectorAtCompileTime, \
      |                             ^~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/Dot.h:74:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT_VECTOR_ONLY’
   74 |   EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:143:29: error: static assertion failed: YOU_TRIED_CALLING_A_VECTOR_METHOD_ON_A_MATRIX
  143 |   EIGEN_STATIC_ASSERT(TYPE::IsVectorAtCompileTime, \
      |                             ^~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/Dot.h:75:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT_VECTOR_ONLY’
   75 |   EIGEN_STATIC_ASSERT_VECTOR_ONLY(OtherDerived)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:143:29: note: ‘Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, 1, true>::IsVectorAtCompileTime’ evaluates to false
  143 |   EIGEN_STATIC_ASSERT(TYPE::IsVectorAtCompileTime, \
      |                             ^~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/Dot.h:75:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT_VECTOR_ONLY’
   75 |   EIGEN_STATIC_ASSERT_VECTOR_ONLY(OtherDerived)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/CwiseNullaryOp.h: In instantiation of ‘static const IdentityReturnType Eigen::MatrixBase<Derived>::Identity() [with Derived = Eigen::Matrix<long long int, -1, -1>; Eigen::MatrixBase<Derived>::IdentityReturnType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<long long int>, Eigen::Matrix<long long int, -1, -1> >]’:
src/Unimodular_Z.hpp:126:38:   required from ‘SU2_Compiler::UnimodularMatrix<N> SU2_Compiler::LLL(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, M, N>, SU2_Compiler::FTYPE) [with int M = -1; int N = -1; SU2_Compiler::UnimodularMatrix<N> = Eigen::Matrix<long long int, -1, -1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:641:56:   recursively required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 7; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 7, 1, 0, 7, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:641:56:   required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 8; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 8, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:764:53:   required from here
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:148:46: error: static assertion failed: YOU_CALLED_A_FIXED_SIZE_METHOD_ON_A_DYNAMIC_SIZE_MATRIX_OR_VECTOR
  148 |   EIGEN_STATIC_ASSERT(TYPE::SizeAtCompileTime!=Eigen::Dynamic, \
      |                             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/CwiseNullaryOp.h:801:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT_FIXED_SIZE’
  801 |   EIGEN_STATIC_ASSERT_FIXED_SIZE(Derived)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:148:46: note: ‘(((int)Eigen::Matrix<long long int, -1, -1>::SizeAtCompileTime) != ((int)Eigen::Dynamic))’ evaluates to false
  148 |   EIGEN_STATIC_ASSERT(TYPE::SizeAtCompileTime!=Eigen::Dynamic, \
      |                             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/CwiseNullaryOp.h:801:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT_FIXED_SIZE’
  801 |   EIGEN_STATIC_ASSERT_FIXED_SIZE(Derived)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> > >, const Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, 1, true>, -1, 1, false> >; Func = Eigen::internal::assign_op<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> > >]’:
/home/morisaki/.local/eigen3/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> > >, const Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, 1, true>, -1, 1, false> >; Derived = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, -1, 1>]’
/home/morisaki/.local/eigen3/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> > >, const Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, 1, true>, -1, 1, false> >; Derived = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, -1, 1>]’
/home/morisaki/.local/eigen3/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> > >, const Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, 1, true>, -1, 1, false> >; _Scalar = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/SU2_compiler.cpp:641:56:   recursively required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 7; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 7, 1, 0, 7, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:641:56:   required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 8; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 8, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:764:53:   required from here
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:177:5: error: static assertion failed: YOU_MIXED_MATRICES_OF_DIFFERENT_SIZES
  175 |      ( \
      |      ~~~
  176 |         (int(Eigen::internal::size_of_xpr_at_compile_time<TYPE0>::ret)==0 && int(Eigen::internal::size_of_xpr_at_compile_time<TYPE1>::ret)==0) \
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  177 |     || (\
      |     ^~~~~
  178 |           (int(TYPE0::RowsAtCompileTime)==Eigen::Dynamic \
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  179 |         || int(TYPE1::RowsAtCompileTime)==Eigen::Dynamic \
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  180 |         || int(TYPE0::RowsAtCompileTime)==int(TYPE1::RowsAtCompileTime)) \
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  181 |       &&  (int(TYPE0::ColsAtCompileTime)==Eigen::Dynamic \
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  182 |         || int(TYPE1::ColsAtCompileTime)==Eigen::Dynamic \
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  183 |         || int(TYPE0::ColsAtCompileTime)==int(TYPE1::ColsAtCompileTime))\
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  184 |        ) \
      |        ~~~
  185 |      )
      |      ~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:194:6: note: in expansion of macro ‘EIGEN_PREDICATE_SAME_MATRIX_SIZE’
  194 |      EIGEN_PREDICATE_SAME_MATRIX_SIZE(TYPE0,TYPE1),\
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/AssignEvaluator.h:887:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT_SAME_MATRIX_SIZE’
  887 |   EIGEN_STATIC_ASSERT_SAME_MATRIX_SIZE(ActualDstTypeCleaned,Src)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:177:5: note: ‘(((((int)Eigen::internal::size_of_xpr_at_compile_time<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, -1, 1> >::ret) == 0) && (((int)Eigen::internal::size_of_xpr_at_compile_time<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> > >, const Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, 1, true>, -1, 1, false> > >::ret) == 0)) || ((((((int)Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, -1, 1>::RowsAtCompileTime) == ((int)Eigen::Dynamic)) || (((int)Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> > >, const Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, 1, true>, -1, 1, false> >::RowsAtCompileTime) == ((int)Eigen::Dynamic))) || (((int)Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, -1, 1>::RowsAtCompileTime) == ((int)Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> > >, const Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, 1, true>, -1, 1, false> >::RowsAtCompileTime))) && (((((int)Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, -1, 1>::ColsAtCompileTime) == ((int)Eigen::Dynamic)) || (((int)Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> > >, const Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, 1, true>, -1, 1, false> >::ColsAtCompileTime) == ((int)Eigen::Dynamic))) || (((int)Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, -1, 1>::ColsAtCompileTime) == ((int)Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> > >, const Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, 1, true>, -1, 1, false> >::ColsAtCompileTime)))))’ evaluates to false
  175 |      ( \
      |      ~~~
  176 |         (int(Eigen::internal::size_of_xpr_at_compile_time<TYPE0>::ret)==0 && int(Eigen::internal::size_of_xpr_at_compile_time<TYPE1>::ret)==0) \
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  177 |     || (\
      |     ^~~~~
  178 |           (int(TYPE0::RowsAtCompileTime)==Eigen::Dynamic \
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  179 |         || int(TYPE1::RowsAtCompileTime)==Eigen::Dynamic \
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  180 |         || int(TYPE0::RowsAtCompileTime)==int(TYPE1::RowsAtCompileTime)) \
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  181 |       &&  (int(TYPE0::ColsAtCompileTime)==Eigen::Dynamic \
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  182 |         || int(TYPE1::ColsAtCompileTime)==Eigen::Dynamic \
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  183 |         || int(TYPE0::ColsAtCompileTime)==int(TYPE1::ColsAtCompileTime))\
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  184 |        ) \
      |        ~~~
  185 |      )
      |      ~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:194:6: note: in expansion of macro ‘EIGEN_PREDICATE_SAME_MATRIX_SIZE’
  194 |      EIGEN_PREDICATE_SAME_MATRIX_SIZE(TYPE0,TYPE1),\
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/AssignEvaluator.h:887:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT_SAME_MATRIX_SIZE’
  887 |   EIGEN_STATIC_ASSERT_SAME_MATRIX_SIZE(ActualDstTypeCleaned,Src)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/PlainObjectBase.h: In instantiation of ‘static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, -2, -2, 0, -2, -2>]’:
/home/morisaki/.local/eigen3/Eigen/src/Core/PlainObjectBase.h:592:29:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, -1, -1>, -1, -1, false>; Derived = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, -2, -2, 0, -2, -2>]’
/home/morisaki/.local/eigen3/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Block<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, -1, -1>, -1, -1, false>; _Scalar = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >; int _Rows = -2; int _Cols = -2; int _Options = 0; int _MaxRows = -2; int _MaxCols = -2]’
src/SU2_compiler.cpp:641:56:   recursively required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 7; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 7, 1, 0, 7, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:641:56:   required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 8; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 8, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:764:53:   required from here
/home/morisaki/.local/eigen3/Eigen/src/Core/PlainObjectBase.h:972:60: error: static assertion failed: INVALID_MATRIX_TEMPLATE_PARAMETERS
  972 |                         && ((RowsAtCompileTime == Dynamic) || (RowsAtCompileTime >= 0))
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/PlainObjectBase.h:972:60: note: ‘((((int)Eigen::DenseBase<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, -2, -2, 0, -2, -2> >::RowsAtCompileTime) == ((int)Eigen::Dynamic)) || (((int)Eigen::DenseBase<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, -2, -2, 0, -2, -2> >::RowsAtCompileTime) >= 0))’ evaluates to false
  972 |                         && ((RowsAtCompileTime == Dynamic) || (RowsAtCompileTime >= 0))
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/../plugins/BlockMethods.h: In instantiation of ‘typename Eigen::DenseBase<Derived>::FixedSegmentReturnType<Eigen::internal::get_fixed_value<NRowsType>::value>::Type Eigen::DenseBase<Derived>::tail(NType) [with NType = long int; Derived = Eigen::Block<Eigen::Ref<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, Eigen::OuterStride<> >, 0, 1, true>; typename Eigen::DenseBase<Derived>::FixedSegmentReturnType<Eigen::internal::get_fixed_value<NRowsType>::value>::Type = Eigen::VectorBlock<Eigen::Block<Eigen::Ref<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, Eigen::OuterStride<> >, 0, 1, true>, -1>]’:
/home/morisaki/.local/eigen3/Eigen/src/LU/PartialPivLU.h:377:25:   required from ‘static Eigen::Index Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex, SizeAtCompileTime>::unblocked_lu(Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex, SizeAtCompileTime>::MatrixTypeRef&, PivIndex*, PivIndex&) [with Scalar = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >; int StorageOrder = 0; PivIndex = int; int SizeAtCompileTime = 0; Eigen::Index = long int; Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex, SizeAtCompileTime>::MatrixTypeRef = Eigen::Ref<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, Eigen::OuterStride<> >]’
/home/morisaki/.local/eigen3/Eigen/src/LU/PartialPivLU.h:439:26:   required from ‘static Eigen::Index Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex, SizeAtCompileTime>::blocked_lu(Eigen::Index, Eigen::Index, Scalar*, Eigen::Index, PivIndex*, PivIndex&, Eigen::Index) [with Scalar = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >; int StorageOrder = 0; PivIndex = int; int SizeAtCompileTime = 0; Eigen::Index = long int]’
/home/morisaki/.local/eigen3/Eigen/src/LU/PartialPivLU.h:519:17:   required from ‘void Eigen::internal::partial_lu_inplace(MatrixType&, TranspositionType&, typename TranspositionType::StorageIndex&) [with MatrixType = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>; TranspositionType = Eigen::Transpositions<0, 0, int>; typename TranspositionType::StorageIndex = int]’
/home/morisaki/.local/eigen3/Eigen/src/LU/PartialPivLU.h:543:31:   required from ‘void Eigen::PartialPivLU<MatrixType>::compute() [with _MatrixType = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>]’
/home/morisaki/.local/eigen3/Eigen/src/LU/PartialPivLU.h:133:14:   required from ‘Eigen::PartialPivLU<MatrixType>& Eigen::PartialPivLU<MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>; _MatrixType = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>]’
/home/morisaki/.local/eigen3/Eigen/src/LU/PartialPivLU.h:315:10:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/morisaki/.local/eigen3/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Inverse<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0> >; Derived = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>]’
/home/morisaki/.local/eigen3/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Inverse<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0> >; Derived = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>]’
/home/morisaki/.local/eigen3/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Inverse<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0> >; _Scalar = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >; int _Rows = 0; int _Cols = 0; int _Options = 0; int _MaxRows = 0; int _MaxCols = 0]’
src/SU2_compiler.cpp:641:56:   recursively required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 7; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 7, 1, 0, 7, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:641:56:   required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 8; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 8, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:764:53:   required from here
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:143:29: error: static assertion failed: YOU_TRIED_CALLING_A_VECTOR_METHOD_ON_A_MATRIX
  143 |   EIGEN_STATIC_ASSERT(TYPE::IsVectorAtCompileTime, \
      |                             ^~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/../plugins/BlockMethods.h:1259:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT_VECTOR_ONLY’
 1259 |   EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:143:29: note: ‘Eigen::Block<Eigen::Ref<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, Eigen::OuterStride<> >, 0, 1, true>::IsVectorAtCompileTime’ evaluates to false
  143 |   EIGEN_STATIC_ASSERT(TYPE::IsVectorAtCompileTime, \
      |                             ^~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/../plugins/BlockMethods.h:1259:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT_VECTOR_ONLY’
 1259 |   EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/../plugins/BlockMethods.h: In instantiation of ‘typename Eigen::DenseBase<Derived>::FixedSegmentReturnType<Eigen::internal::get_fixed_value<NRowsType>::value>::Type Eigen::DenseBase<Derived>::tail(NType) [with NType = Eigen::internal::VariableAndFixedInt<-1>; Derived = Eigen::Block<Eigen::Ref<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, Eigen::OuterStride<> >, 0, 1, true>; typename Eigen::DenseBase<Derived>::FixedSegmentReturnType<Eigen::internal::get_fixed_value<NRowsType>::value>::Type = Eigen::VectorBlock<Eigen::Block<Eigen::Ref<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, Eigen::OuterStride<> >, 0, 1, true>, -1>]’:
/home/morisaki/.local/eigen3/Eigen/src/LU/PartialPivLU.h:390:23:   required from ‘static Eigen::Index Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex, SizeAtCompileTime>::unblocked_lu(Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex, SizeAtCompileTime>::MatrixTypeRef&, PivIndex*, PivIndex&) [with Scalar = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >; int StorageOrder = 0; PivIndex = int; int SizeAtCompileTime = 0; Eigen::Index = long int; Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex, SizeAtCompileTime>::MatrixTypeRef = Eigen::Ref<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, Eigen::OuterStride<> >]’
/home/morisaki/.local/eigen3/Eigen/src/LU/PartialPivLU.h:439:26:   required from ‘static Eigen::Index Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex, SizeAtCompileTime>::blocked_lu(Eigen::Index, Eigen::Index, Scalar*, Eigen::Index, PivIndex*, PivIndex&, Eigen::Index) [with Scalar = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >; int StorageOrder = 0; PivIndex = int; int SizeAtCompileTime = 0; Eigen::Index = long int]’
/home/morisaki/.local/eigen3/Eigen/src/LU/PartialPivLU.h:519:17:   required from ‘void Eigen::internal::partial_lu_inplace(MatrixType&, TranspositionType&, typename TranspositionType::StorageIndex&) [with MatrixType = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>; TranspositionType = Eigen::Transpositions<0, 0, int>; typename TranspositionType::StorageIndex = int]’
/home/morisaki/.local/eigen3/Eigen/src/LU/PartialPivLU.h:543:31:   required from ‘void Eigen::PartialPivLU<MatrixType>::compute() [with _MatrixType = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>]’
/home/morisaki/.local/eigen3/Eigen/src/LU/PartialPivLU.h:133:14:   required from ‘Eigen::PartialPivLU<MatrixType>& Eigen::PartialPivLU<MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>; _MatrixType = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>]’
/home/morisaki/.local/eigen3/Eigen/src/LU/PartialPivLU.h:315:10:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/morisaki/.local/eigen3/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Inverse<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0> >; Derived = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>]’
/home/morisaki/.local/eigen3/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Inverse<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0> >; Derived = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>]’
/home/morisaki/.local/eigen3/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Inverse<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0> >; _Scalar = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >; int _Rows = 0; int _Cols = 0; int _Options = 0; int _MaxRows = 0; int _MaxCols = 0]’
src/SU2_compiler.cpp:641:56:   recursively required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 7; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 7, 1, 0, 7, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:641:56:   required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 8; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 8, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:764:53:   required from here
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:143:29: error: static assertion failed: YOU_TRIED_CALLING_A_VECTOR_METHOD_ON_A_MATRIX
  143 |   EIGEN_STATIC_ASSERT(TYPE::IsVectorAtCompileTime, \
      |                             ^~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/../plugins/BlockMethods.h:1259:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT_VECTOR_ONLY’
 1259 |   EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:143:29: note: ‘Eigen::Block<Eigen::Ref<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, Eigen::OuterStride<> >, 0, 1, true>::IsVectorAtCompileTime’ evaluates to false
  143 |   EIGEN_STATIC_ASSERT(TYPE::IsVectorAtCompileTime, \
      |                             ^~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/../plugins/BlockMethods.h:1259:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT_VECTOR_ONLY’
 1259 |   EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/../plugins/BlockMethods.h: In instantiation of ‘typename Eigen::DenseBase<Derived>::FixedSegmentReturnType<Eigen::internal::get_fixed_value<NRowsType>::value>::Type Eigen::DenseBase<Derived>::tail(NType) [with NType = Eigen::internal::VariableAndFixedInt<-1>; Derived = Eigen::Block<Eigen::Ref<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, Eigen::OuterStride<> >, 1, 0, false>; typename Eigen::DenseBase<Derived>::FixedSegmentReturnType<Eigen::internal::get_fixed_value<NRowsType>::value>::Type = Eigen::VectorBlock<Eigen::Block<Eigen::Ref<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, Eigen::OuterStride<> >, 1, 0, false>, -1>]’:
/home/morisaki/.local/eigen3/Eigen/src/LU/PartialPivLU.h:400:130:   required from ‘static Eigen::Index Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex, SizeAtCompileTime>::unblocked_lu(Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex, SizeAtCompileTime>::MatrixTypeRef&, PivIndex*, PivIndex&) [with Scalar = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >; int StorageOrder = 0; PivIndex = int; int SizeAtCompileTime = 0; Eigen::Index = long int; Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex, SizeAtCompileTime>::MatrixTypeRef = Eigen::Ref<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, Eigen::OuterStride<> >]’
/home/morisaki/.local/eigen3/Eigen/src/LU/PartialPivLU.h:439:26:   required from ‘static Eigen::Index Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex, SizeAtCompileTime>::blocked_lu(Eigen::Index, Eigen::Index, Scalar*, Eigen::Index, PivIndex*, PivIndex&, Eigen::Index) [with Scalar = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >; int StorageOrder = 0; PivIndex = int; int SizeAtCompileTime = 0; Eigen::Index = long int]’
/home/morisaki/.local/eigen3/Eigen/src/LU/PartialPivLU.h:519:17:   required from ‘void Eigen::internal::partial_lu_inplace(MatrixType&, TranspositionType&, typename TranspositionType::StorageIndex&) [with MatrixType = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>; TranspositionType = Eigen::Transpositions<0, 0, int>; typename TranspositionType::StorageIndex = int]’
/home/morisaki/.local/eigen3/Eigen/src/LU/PartialPivLU.h:543:31:   required from ‘void Eigen::PartialPivLU<MatrixType>::compute() [with _MatrixType = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>]’
/home/morisaki/.local/eigen3/Eigen/src/LU/PartialPivLU.h:133:14:   required from ‘Eigen::PartialPivLU<MatrixType>& Eigen::PartialPivLU<MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>; _MatrixType = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>]’
/home/morisaki/.local/eigen3/Eigen/src/LU/PartialPivLU.h:315:10:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/morisaki/.local/eigen3/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Inverse<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0> >; Derived = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>]’
/home/morisaki/.local/eigen3/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Inverse<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0> >; Derived = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>]’
/home/morisaki/.local/eigen3/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Inverse<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0> >; _Scalar = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >; int _Rows = 0; int _Cols = 0; int _Options = 0; int _MaxRows = 0; int _MaxCols = 0]’
src/SU2_compiler.cpp:641:56:   recursively required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 7; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 7, 1, 0, 7, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:641:56:   required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 8; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 8, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:764:53:   required from here
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:143:29: error: static assertion failed: YOU_TRIED_CALLING_A_VECTOR_METHOD_ON_A_MATRIX
  143 |   EIGEN_STATIC_ASSERT(TYPE::IsVectorAtCompileTime, \
      |                             ^~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/../plugins/BlockMethods.h:1259:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT_VECTOR_ONLY’
 1259 |   EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:143:29: note: ‘Eigen::Block<Eigen::Ref<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, Eigen::OuterStride<> >, 1, 0, false>::IsVectorAtCompileTime’ evaluates to false
  143 |   EIGEN_STATIC_ASSERT(TYPE::IsVectorAtCompileTime, \
      |                             ^~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/../plugins/BlockMethods.h:1259:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT_VECTOR_ONLY’
 1259 |   EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/Visitor.h: In instantiation of ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::maxCoeff(IndexType*) const [with int NaNPropagation = 0; IndexType = long int; Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_score_coeff_op<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> > >, const Eigen::Block<Eigen::Block<Eigen::Ref<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, Eigen::OuterStride<> >, 0, 1, true>, -1, 1, false> >; typename Eigen::internal::traits<T>::Scalar = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’:
/home/morisaki/.local/eigen3/Eigen/src/Core/DenseBase.h:501:37:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::maxCoeff(IndexType*) const [with IndexType = long int; Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_score_coeff_op<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> > >, const Eigen::Block<Eigen::Block<Eigen::Ref<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, Eigen::OuterStride<> >, 0, 1, true>, -1, 1, false> >; typename Eigen::internal::traits<T>::Scalar = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
/home/morisaki/.local/eigen3/Eigen/src/LU/PartialPivLU.h:377:63:   required from ‘static Eigen::Index Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex, SizeAtCompileTime>::unblocked_lu(Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex, SizeAtCompileTime>::MatrixTypeRef&, PivIndex*, PivIndex&) [with Scalar = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >; int StorageOrder = 0; PivIndex = int; int SizeAtCompileTime = 0; Eigen::Index = long int; Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex, SizeAtCompileTime>::MatrixTypeRef = Eigen::Ref<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, Eigen::OuterStride<> >]’
/home/morisaki/.local/eigen3/Eigen/src/LU/PartialPivLU.h:439:26:   required from ‘static Eigen::Index Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex, SizeAtCompileTime>::blocked_lu(Eigen::Index, Eigen::Index, Scalar*, Eigen::Index, PivIndex*, PivIndex&, Eigen::Index) [with Scalar = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >; int StorageOrder = 0; PivIndex = int; int SizeAtCompileTime = 0; Eigen::Index = long int]’
/home/morisaki/.local/eigen3/Eigen/src/LU/PartialPivLU.h:519:17:   required from ‘void Eigen::internal::partial_lu_inplace(MatrixType&, TranspositionType&, typename TranspositionType::StorageIndex&) [with MatrixType = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>; TranspositionType = Eigen::Transpositions<0, 0, int>; typename TranspositionType::StorageIndex = int]’
/home/morisaki/.local/eigen3/Eigen/src/LU/PartialPivLU.h:543:31:   required from ‘void Eigen::PartialPivLU<MatrixType>::compute() [with _MatrixType = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>]’
/home/morisaki/.local/eigen3/Eigen/src/LU/PartialPivLU.h:133:14:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/morisaki/.local/eigen3/Eigen/src/Core/PlainObjectBase.h:797:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Inverse<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0> >; Derived = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>]’
/home/morisaki/.local/eigen3/Eigen/src/Core/PlainObjectBase.h:594:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Inverse<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0> >; Derived = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>]’
/home/morisaki/.local/eigen3/Eigen/src/Core/Matrix.h:423:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Inverse<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0> >; _Scalar = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >; int _Rows = 0; int _Cols = 0; int _Options = 0; int _MaxRows = 0; int _MaxCols = 0]’
src/SU2_compiler.cpp:641:56:   recursively required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 7; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 7, 1, 0, 7, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:641:56:   required from ‘std::vector<Eigen::Matrix<long long int, N, 1, (Eigen::AutoAlign | (((N == 1) && (1 != 1)) ? Eigen::RowMajor : (((1 == 1) && (N != 1)) ? Eigen::ColMajor :  Eigen::ColMajor))), N, 1> > SU2_Compiler::Enumerate_Integer_Points(Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N, N>, Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N>, SU2_Compiler::FTYPE) [with int N = 8; Eigen::Vector<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, N> = Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 8, 1>; SU2_Compiler::FTYPE = boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >]’
src/SU2_compiler.cpp:764:53:   required from here
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:143:29: error: static assertion failed: YOU_TRIED_CALLING_A_VECTOR_METHOD_ON_A_MATRIX
  143 |   EIGEN_STATIC_ASSERT(TYPE::IsVectorAtCompileTime, \
      |                             ^~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/Visitor.h:372:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT_VECTOR_ONLY’
  372 |   EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:143:29: note: ‘Eigen::CwiseUnaryOp<Eigen::internal::scalar_score_coeff_op<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> > >, const Eigen::Block<Eigen::Block<Eigen::Ref<Eigen::Matrix<boost::multiprecision::number<boost::multiprecision::backends::cpp_dec_float<50> >, 0, 0, 0, 0, 0>, 0, Eigen::OuterStride<> >, 0, 1, true>, -1, 1, false> >::IsVectorAtCompileTime’ evaluates to false
  143 |   EIGEN_STATIC_ASSERT(TYPE::IsVectorAtCompileTime, \
      |                             ^~~~~~~~~~~~~~~~~~~~~
/home/morisaki/.local/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54: note: in definition of macro ‘EIGEN_STATIC_ASSERT’
   33 |     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
      |                                                      ^
/home/morisaki/.local/eigen3/Eigen/src/Core/Visitor.h:372:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT_VECTOR_ONLY’
  372 |   EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
make: *** [Makefile:54: SU2_compiler.o] Error 1
